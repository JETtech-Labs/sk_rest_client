{
    "openapi": "3.1.0",
    "info": {
        "title": "Secure Key VPN API",
        "version": "0.1.0"
    },
    "paths": {
        "/api/sys/v1/job-status/{id}": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get the status of the job.",
                "description": "Get the status of the job.",
                "operationId": "System-get_sys_job_status",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobStatus"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sys/v1/swupdate": {
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Upload a SWupdate File",
                "description": "Upload a SWupdate File",
                "operationId": "System-post_swupdate_file",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_System-post_swupdate_file"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "System"
                ],
                "summary": "Delete the SWupdate File",
                "description": "Delete the SWupdate File",
                "operationId": "System-delete_swupdate_file",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/swupdate-install": {
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Install a SWupdate File",
                "description": "Install a SWupdate File",
                "operationId": "System-install_swupdate_file",
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/swupdate-check": {
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Check if a newer Software version is available.",
                "description": "Check if a newer Software version is available.",
                "operationId": "System-check_swupdate",
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/swupdate-check-status": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get the status of the SWupdate check.",
                "description": "Get the status of the SWupdate check.",
                "operationId": "System-get_swupdate_status",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwupdateStatus"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/reboot": {
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Reboot the system",
                "description": "Reboot the system",
                "operationId": "System-post_reboot",
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/version": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get the system Version",
                "description": "Get the system Version",
                "operationId": "System-get_system_version",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemVersionModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/system-report": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get the system report",
                "description": "Get the system report",
                "operationId": "System-get_system_report",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/SystemReportModel"
                                    },
                                    "type": "array",
                                    "title": "Response System-Get System Report"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/machine-id": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get the system Machine ID",
                "description": "Get the system Machine ID",
                "operationId": "System-get_system_machine_id",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MachineIDModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/time": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get the system Time (UTC Time)",
                "description": "Get the system Time (UTC Time)",
                "operationId": "System-get_system_time",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SysTimeModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/status": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get the system status",
                "description": "Get the system status",
                "operationId": "System-get_sys_status",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/StatusModel"
                                    },
                                    "type": "array",
                                    "title": "Response System-Get Sys Status"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/hostname": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get the system Hostname",
                "description": "Get the system Hostname",
                "operationId": "System-get_hostname",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HostnameModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Set the system Hostname",
                "description": "Set the system Hostname",
                "operationId": "System-post_hostname",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HostnameModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/logs/crypto": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get all crypto logs",
                "description": "Get all crypto logs",
                "operationId": "System-get_crypto_logs",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/FileDataModel"
                                    },
                                    "type": "array",
                                    "title": "Response System-Get Crypto Logs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/logs/swupdate": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get SW update log",
                "description": "Get SW update log",
                "operationId": "System-get_swupdate_log",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileDataModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/logs/user-auth": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get User Authentication Logs",
                "description": "Get User Authentication Logs",
                "operationId": "System-get_user_auth_log",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileDataModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/logs/http-access": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get HTTP Access log",
                "description": "Get HTTP Access log",
                "operationId": "System-get_access_log",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileDataModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/logs/rest-api": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get REST API log",
                "description": "Get REST API log",
                "operationId": "System-get_rest_api_log",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileDataModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/logs/ssh": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get SSH log",
                "description": "Get SSH log",
                "operationId": "System-get_ssh_log",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileDataModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/logs/ipsec": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get IPsec log",
                "description": "Get IPsec log",
                "operationId": "System-get_ipsec_log",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileDataModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/tls_settings": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get TLS settings for client TLS Authentication",
                "description": "Get TLS settings for client TLS Authentication",
                "operationId": "System-get_tls_settings",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TLSConfigModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Set TLS settings for client TLS Authentication",
                "description": "Set TLS settings for client TLS Authentication",
                "operationId": "System-post_tls_settings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TLSConfigModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/syslog/settings": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get Syslog Configuration Settings",
                "description": "Get Syslog Configuration Settings",
                "operationId": "System-get_syslog_config",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SyslogConfigModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Set Syslog Configuration Settings",
                "description": "Set Syslog Configuration Settings",
                "operationId": "System-set_syslog_config",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyslogConfigModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/dns/settings": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get DNS Configuration",
                "description": "Get DNS Configuration",
                "operationId": "System-get_dns_config",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DNSConfigModel-Output"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Set DNS Configuration",
                "description": "Set DNS Configuration",
                "operationId": "System-set_dns_config",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DNSConfigModel-Input"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/sys/v1/dns/status": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get DNS Service Status",
                "description": "Get DNS Service Status",
                "operationId": "System-get_dns_status",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemReportModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v1/hw/{iface_name}": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get Hardware Interface Stats by Name",
                "description": "Get Hardware Interface Stats by Name",
                "operationId": "Statistics-get_hw_interface_stats",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "iface_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "The Name of the Interface"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatsStringModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stats/v1/hw": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get Hardware Interface Stats",
                "description": "Get Hardware Interface Stats",
                "operationId": "Statistics-get_hw_stats",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatsStringModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v1/ipsec": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get IPsec Stats",
                "description": "Get IPsec Stats",
                "operationId": "Statistics-get_ipsec_stats",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatsStringModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v1/history/ipsec": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get IPsec historical data",
                "description": "Get IPsec historical data",
                "operationId": "Statistics-get_ipsec_counter_history",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DpStats"
                                    },
                                    "type": "array",
                                    "title": "Response Statistics-Get Ipsec Counter History"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v1/history/errors": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get Errors historical data",
                "description": "Get Errors Historical data",
                "operationId": "Statistics-get_errors_counter_history",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DpStats"
                                    },
                                    "type": "array",
                                    "title": "Response Statistics-Get Errors Counter History"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v1/history/sas": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get IPsec Security Association historical data",
                "description": "Get IPsec Security Association Historical data",
                "operationId": "Statistics-get_sas_counter_history",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DpStats"
                                    },
                                    "type": "array",
                                    "title": "Response Statistics-Get Sas Counter History"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v1/history/iface": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get software Interface historical data",
                "description": "Get software Interface Historical data",
                "operationId": "Statistics-get_iface_counter_history",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DpStats"
                                    },
                                    "type": "array",
                                    "title": "Response Statistics-Get Iface Counter History"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v1/runtime": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get dataplane runtime stats",
                "description": "Get dataplane runtime stats",
                "operationId": "Statistics-get_runtime_stats",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatsStringModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v1/errors": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get Dataplane Error Stats",
                "description": "Get Dataplane Error Stats",
                "operationId": "Statistics-get_dp_error_stats",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatsStringModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v2/errors": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get Dataplane Error Stats in JSON Format",
                "description": "Get Dataplane Error Stats in JSON Format",
                "operationId": "Statistics-get_dp_error_stats_json",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DpStats"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v1/iface": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get Dataplane software interface Stat",
                "description": "Get Dataplane software interface Stats",
                "operationId": "Statistics-get_dp_iface_stats_json",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DpStats"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/stats/v1/crypto": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get Crypto Stats",
                "description": "Get Crypto Stats",
                "operationId": "Statistics-get_crypto_stats",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/FileDataModel"
                                    },
                                    "type": "array",
                                    "title": "Response Statistics-Get Crypto Stats"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/ca": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get all Certificate Authorities",
                "description": "Get all Certificate Authorities",
                "operationId": "Certificates-get_all_cas",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CertInfoModel"
                                    },
                                    "type": "array",
                                    "title": "Response Certificates-Get All Cas"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Upload CA Certificate File",
                "description": "Upload CA Certificate File",
                "operationId": "Certificates-post_ca_cert",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_Certificates-post_ca_cert"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertInfoModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/user": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get all End Entity User Certificates",
                "description": "Get all End Entity User Certificates",
                "operationId": "Certificates-get_all_user_certs",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CertInfoModel"
                                    },
                                    "type": "array",
                                    "title": "Response Certificates-Get All User Certs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Upload user Certificate File",
                "description": "Upload user Certificate File",
                "operationId": "Certificates-post_user_cert",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_Certificates-post_user_cert"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertInfoModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/all": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get IPsec Certificates",
                "description": "Get IPsec Certificates",
                "operationId": "Certificates-get_all_certs",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CertInfoModel"
                                    },
                                    "type": "array",
                                    "title": "Response Certificates-Get All Certs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/all/details": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get Certificate details for all Certificates",
                "description": "Get Certificate details for all Certificates",
                "operationId": "Certificates-get_all_cert_details",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CertDetailModel"
                                    },
                                    "type": "array",
                                    "title": "Response Certificates-Get All Cert Details"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/details": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get Certificate details",
                "description": "Get Certificate details",
                "operationId": "Certificates-get_cert_details",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CertInfoModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertDetailModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/details/id/{id}": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get Certificate details by Certificate ID",
                "description": "Get all Certificates by Certificate ID",
                "operationId": "Certificates-get_cert_details_by_id",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertDetailModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/certs/v1/details/fingerprint/{fingerprint}": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get Certificate details by Certificate Fingerprint",
                "description": "Get all Certificates by Certificate Fingerprint",
                "operationId": "Certificates-get_cert_details_by_fingerprint",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fingerprint",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Fingerprint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertDetailModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/certs/v1/loaded": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get all Certificates that are loaded into the Dataplane",
                "description": "Get all Certificates that are loaded into the Dataplane",
                "operationId": "Certificates-get_loaded_certs",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CertDetailModel"
                                    },
                                    "type": "array",
                                    "title": "Response Certificates-Get Loaded Certs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/certs": {
            "delete": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Delete Certificates from System",
                "description": "Delete Certificates from System",
                "operationId": "Certificates-delete_certs",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/CertInfoModel"
                                },
                                "type": "array",
                                "title": "Cert Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/private_key": {
            "post": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Upload Private Key File",
                "description": "Upload Private Key File",
                "operationId": "Certificates-post_private_key",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_Certificates-post_private_key"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeyInfoModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/private_keys": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get all Private Keys",
                "description": "Get all Private Keys",
                "operationId": "Certificates-get_private_keys",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/KeyInfoModel"
                                    },
                                    "type": "array",
                                    "title": "Response Certificates-Get Private Keys"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Delete Private Key File",
                "description": "Delete Private Key File",
                "operationId": "Certificates-delete_private_keys",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/KeyFingerprint"
                                },
                                "type": "array",
                                "title": "Key Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/private_keys/loaded": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get all Private Keys loaded into the Dataplane",
                "description": "Get all Private Keys loaded into the Dataplane",
                "operationId": "Certificates-get_loaded_private_keys",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/KeyLoadedInfoModel"
                                    },
                                    "type": "array",
                                    "title": "Response Certificates-Get Loaded Private Keys"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/signing_requests": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get the list of open Certificate Signing Requests",
                "description": "Get the list of open Certificate Signing Requests",
                "operationId": "Certificates-get_open_csrs",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CsrResponseModel"
                                    },
                                    "type": "array",
                                    "title": "Response Certificates-Get Open Csrs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/signing_request": {
            "post": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Generate New Private Key and Certificate Signing Request",
                "description": "Generate New Private Key and Certificate Signing Request",
                "operationId": "Certificates-post_csr",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CertSigningRequestModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CsrResponseModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Delete the in-progress Certificate Signing Request",
                "description": "Delete the in-progress Certificate Signing Request",
                "operationId": "Certificates-delete_open_csr",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CsrUuidModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/signed_csr": {
            "post": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Upload Signed Certificate Signing Request",
                "description": "Upload Signed Certificate Signing Request",
                "operationId": "Certificates-post_signed_csr",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CsrSignedRequestModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/tls/client-cert": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get the list SSL Certificates used for HTTPS Client TLS Authentication (Mutual TLS)",
                "description": "Get the list of SSL Certificates used for HTTPS Client TLS Authentication (Mutual TLS)",
                "operationId": "Certificates-get_tls_client_certs",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CertInfoModel"
                                    },
                                    "type": "array",
                                    "title": "Response Certificates-Get Tls Client Certs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Upload a Certificate for use in HTTPS Client TLS Authentication (Mutual TLS)",
                "description": "Upload a Certificate for use in HTTPS Client TLS Authentication (Mutual TLS)",
                "operationId": "Certificates-post_tls_cert",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_Certificates-post_tls_cert"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertInfoModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Delete an SSL Certificate used in HTTPS Client TLS Authentication (Mutual TLS)",
                "description": "Delete an SSL Certificate used in HTTPS Client TLS Authentication (Mutual TLS)",
                "operationId": "Certificates-delete_tls_cert",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CertInfoModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/tls/server-cert/info": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get info of the Certificate used for HTTPS Server Authentication",
                "description": "Get info of the Certificate used for HTTPS Server Authentication",
                "operationId": "Certificates-get_tls_server_cert_info",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/CertInfoModel"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Certificates-Get Tls Server Cert Info"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/tls/server-cert": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get details of the Certificate used for HTTPS Server Authentication",
                "description": "Get details of the Certificate used for HTTPS Server Authentication",
                "operationId": "Certificates-get_tls_server_cert",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/CertDetailModel"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Certificates-Get Tls Server Cert"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Delete the Certificate used for HTTPS Server Authentication (re-enables Self-Signed Certificate)",
                "description": "Delete the Certificate used for HTTPS Server Authentication (re-enables Self-Signed Certificate)",
                "operationId": "Certificates-delete_tls_server_cert",
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/syslog/ca": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get details of the Syslog CA Certificate ",
                "description": "Get details of the Syslog CA Certificate used for Syslog Authentication",
                "operationId": "Certificates-get_syslog_ca_cert",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/CertDetailModel"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Certificates-Get Syslog Ca Cert"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Upload a CA Certificate for Syslog Authentication",
                "description": "Upload a Certificate for Syslog Authentication",
                "operationId": "Certificates-post_syslog_cert",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_Certificates-post_syslog_cert"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CertInfoModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Delete the Syslog CA Certificate",
                "description": "Delete the Syslog CA Certificate",
                "operationId": "Certificates-delete_syslog_ca_cert",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/certs/v1/syslog/client-cert": {
            "get": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Get details of the Syslog Client Certificate ",
                "description": "Get details of the Syslog Client Certificate used for Syslog Authentication",
                "operationId": "Certificates-get_syslog_client_cert",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/CertDetailModel"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Certificates-Get Syslog Client Cert"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Delete Syslog Client Certificate and Key",
                "description": "Delete Syslog Client Certificate and Key",
                "operationId": "Certificates-delete_syslog_client_certs",
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/auth/v1/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login for Access Token",
                "description": "Login for Access Token",
                "operationId": "Authentication-login_for_access_token",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_Authentication-login_for_access_token"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/v1/settings": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Security Settings",
                "description": "Get Security Settings",
                "operationId": "Authentication-get_auth_settings",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SysSecuritySettings"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Set Security Settings",
                "description": "Set Security Settings",
                "operationId": "Authentication-set_auth_settings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SysSecuritySettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/auth/v1/otp/enable": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Enable User One Time Password",
                "description": "Enable User One Time Password",
                "operationId": "Authentication-set_opt_user_enable",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/auth/v1/otp/disable": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Disable User One Time Password",
                "description": "Disable User One Time Password",
                "operationId": "Authentication-set_opt_user_disable",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/auth/v1/otp/generate-qrcode": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate User One Time Password QR Code",
                "description": "Generate User One Time Password QR Code",
                "operationId": "Authentication-generate_otp_qrcode",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "image/png": {}
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/auth/v1/otp/generate-qrcode-b64": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate Base64 Encoded QR Code for this user OTP",
                "description": "Generate Base64 Encoded QR Code for this user OTP",
                "operationId": "Authentication-generate_otp_qrcode_b64",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "image/png": {}
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/auth/v1/otp/generate-uri": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate User One Time Password URI",
                "description": "Generate User One Time Password URI",
                "operationId": "Authentication-generate_otp_uri",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OtpUriModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/auth/v1/change-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change A Users Password",
                "description": "Change a users password",
                "operationId": "Authentication-Change a users password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserChangePassword"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/v1/register": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Register A New User",
                "operationId": "User Management-register a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/users/v1/initial": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Register An Initial Admin User",
                "description": "Register the inital admin user - only allowed once",
                "operationId": "User Management-Register an initial admin user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/v1/me": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get Information About The Current User",
                "description": "Get information about the current user",
                "operationId": "User Management-Get information about the current user",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInfo"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/users/v1/all": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get The List Of All Registered Users",
                "description": "Get the list of all registered users",
                "operationId": "User Management-Get the list of all registered users",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/UserInfo"
                                    },
                                    "type": "array",
                                    "title": "Response User Management-Get The List Of All Registered Users"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/users/v1/{username}": {
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete A User",
                "description": "Delete a user by username",
                "operationId": "User Management-Delete a user",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Username"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/v1/ssh/all": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get The List Of Ssh Users",
                "description": "Get the list of SSH users",
                "operationId": "User Management-Get the list of SSH users",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/SSHUserInfo"
                                    },
                                    "type": "array",
                                    "title": "Response User Management-Get The List Of Ssh Users"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/users/v1/ssh/{username}": {
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete A Ssh User",
                "description": "Delete a SSH user by username",
                "operationId": "User Management-Delete a SSH user",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Username"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/v1/ssh": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Add A New Ssh User",
                "description": "Add a new SSH user",
                "operationId": "User Management-Add a new SSH user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SSHUserInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/interfaces/v1/settings": {
            "get": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Get All Interface Settings",
                "description": "Get Interface Settings",
                "operationId": "Interfaces-get_all_interfaces_settings",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/IfaceSettings"
                                    },
                                    "type": "array",
                                    "title": "Response Interfaces-Get All Interfaces Settings"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/interfaces/v1/role/{role_str}": {
            "get": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Get Interfaces for the specified role",
                "description": "Get Interfaces for the specified role",
                "operationId": "Interfaces-get_interfaces_by_role",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "role_str",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/IfaceRoleTypes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IfaceSettings"
                                    },
                                    "title": "Response Interfaces-Get Interfaces By Role"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/interfaces/v1/role": {
            "post": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Assign a role to an interface based on the interface MAC address",
                "description": "Assign a role to an interface based on the interface MAC address. Allows the user to change WAN/LAN interfaces on the system.",
                "operationId": "Interfaces-set_interface_roles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IfaceRoleSet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/interfaces/v1/{iface_name}": {
            "get": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Get Interface Settings by Name",
                "description": "Get interface settings by name",
                "operationId": "Interfaces-get_interface_settings",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "iface_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Iface Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IfaceSettings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/interfaces/v1/{iface_name}/ip": {
            "post": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Add interface IP Address prefix",
                "description": "Add interface IP Address prefix",
                "operationId": "Interfaces-add_interface_ip",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "iface_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Name of the interface"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IpSubnetModel"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Remove interface IP prefix",
                "description": "Remove interface IP prefix",
                "operationId": "Interfaces-del_interface_ip",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "iface_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "name of the interface"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IpSubnetModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Get interface IP Address list",
                "description": "Get interface IP Address list",
                "operationId": "Interfaces-get_interface_ips",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "iface_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "name of the interface"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IpSubnetModel"
                                    },
                                    "title": "Response Interfaces-Get Interface Ips"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/interfaces/v1/ip/routes": {
            "get": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Get Dataplane FIB Table",
                "description": "Get Dataplane Forwarding Information Routing Table (formatted string)",
                "operationId": "Interfaces-get_ip_routes",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatsStringModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/interfaces/v1/ip/routes-saved": {
            "get": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Get Saved IP Routes",
                "description": "Get Saved IP Routes",
                "operationId": "Interfaces-get_saved_ip_routes",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/RouteModel"
                                    },
                                    "type": "array",
                                    "title": "Response Interfaces-Get Saved Ip Routes"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/interfaces/v1/ip/route": {
            "post": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Add IP Route",
                "description": "Add IP Route to a subnet via a gateway and/or interface",
                "operationId": "Interfaces-add_ip_route",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RouteModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Interfaces"
                ],
                "summary": "Delete IP Route",
                "description": "Delete IP Route to a subnet via a gateway and/or interface",
                "operationId": "Interfaces-delete_ip_route",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RouteModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/ipsec/v1/connections/loaded": {
            "get": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Get a list of active IPsec Connections",
                "description": "Get a list of active IPsec Connections",
                "operationId": "IPsec-get_loaded_ipsec_connections",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnectionModel"
                                    },
                                    "type": "array",
                                    "title": "Response Ipsec-Get Loaded Ipsec Connections"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/ipsec/v1/connections/loaded/{conn_name}": {
            "post": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Activate a Connection",
                "description": "Activate a Connection - will initiate the IKE and Child connections",
                "operationId": "IPsec-load_ipsec_connection",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conn_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Conn Name"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Deactivate a Connection",
                "description": "Deactivate Connection - will terminate the IKE and Child connections",
                "operationId": "IPsec-deactivate_ipsec_connection",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conn_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Conn Name"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ipsec/v1/connections": {
            "get": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Get all saved IPsec Connections",
                "description": "Get all saved IPsec Connections",
                "operationId": "IPsec-get_saved_ipsec_connections",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ConnCreateModel-Output"
                                    },
                                    "type": "array",
                                    "title": "Response Ipsec-Get Saved Ipsec Connections"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Add New Connection ",
                "description": "Add New Connection",
                "operationId": "IPsec-add_ipsec_connection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnCreateModel-Input"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Delete Connection by name",
                "description": "Delete Connection by name",
                "operationId": "IPsec-del_ipsec_connection",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NameModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/ipsec/v1/connections/{conn_name}": {
            "put": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Modify Existing Connection",
                "description": "Modify Existing Connection",
                "operationId": "IPsec-modify_ipsec_connection",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conn_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Conn Name"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnCreateModel-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ipsec/v1/sas": {
            "get": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Get All Active SAs",
                "description": "Get All Active SAs",
                "operationId": "IPsec-get_active_sas",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "$ref": "#/components/schemas/SAModel"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "null"
                                        }
                                    ],
                                    "title": "Response Ipsec-Get Active Sas"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/ipsec/v1/sas/initiate-child": {
            "post": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Initiate Child SA ",
                "description": "Initiate Child SA",
                "operationId": "IPsec-initiate_ipsec_sa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NameModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/ipsec/v1/sas/terminate-child": {
            "post": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Terminate Child SA ",
                "description": "Terminate Child SA",
                "operationId": "IPsec-terminate_ipsec_sa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NameModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/ipsec/v1/sas/initiate-ike": {
            "post": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Initiate IKE Connection ",
                "description": "Initiate IKE Connection by name",
                "operationId": "IPsec-initiate_ike_conn",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NameModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/ipsec/v1/sas/terminate-ike": {
            "post": {
                "tags": [
                    "IPsec"
                ],
                "summary": "Terminate IKE Connection ",
                "description": "Terminate IKE Connection by name",
                "operationId": "IPsec-terminate_ike_conn",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NameModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobNumber"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/acl/v1/rules/ip/{interface}": {
            "get": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Get Access Control Rules for the Interface",
                "description": "Get All Access Control Rules for the Interface",
                "operationId": "Access Control-get_interface_acl_rules",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "interface",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/IfaceRoleTypes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IpAclRule"
                                    },
                                    "title": "Response Access Control-Get Interface Acl Rules"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acl/v1/rules/ip": {
            "get": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Get LAN and WAN  Access Control Rules",
                "description": "Get LAN and WAN Access Control Rules",
                "operationId": "Access Control-get_all_acl_rules",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/IpAclRule"
                                    },
                                    "type": "array",
                                    "title": "Response Access Control-Get All Acl Rules"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Replace the entire Access Control Rule Set.",
                "description": "Replace the entire Access Control Rules Set with the provided list.",
                "operationId": "Access Control-set_acl_rules",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/IpAclRule"
                                },
                                "type": "array",
                                "title": "Rules"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Add New Access Control Rule",
                "description": "Add New Access Control Rule",
                "operationId": "Access Control-add_acl_rule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IpAclRule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Delete an Access Control Rule",
                "description": "Delete an Access Control Rule",
                "operationId": "Access Control-delete_acl_rule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IpAclRule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/acl/v1/stats/ip": {
            "get": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Get Access Control Rule Stats",
                "description": "Get Access Control Rule Stats",
                "operationId": "Access Control-get_acl_ip_rule_stats",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AclStats"
                                    },
                                    "type": "array",
                                    "title": "Response Access Control-Get Acl Ip Rule Stats"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/acl/v1/stats/errors": {
            "get": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Get ACL related error stats",
                "description": "Get ACL related error stats including ACL drop and deny stats",
                "operationId": "Access Control-get_acl_drop_stats",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DpStats"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/acl/v1/rules/macip/{interface}": {
            "get": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Get MACIP Access Control Rules for the Interface",
                "description": "Get MACIP Access Control Rules for the Interface",
                "operationId": "Access Control-get_macip_acl_rules",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "interface",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/IfaceRoleTypes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MacIpAclRule"
                                    },
                                    "title": "Response Access Control-Get Macip Acl Rules"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acl/v1/rules/macip": {
            "get": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Get LAN and WAN MACIP Access Control Rules",
                "description": "Get LAN and WAN MACIP Access Control Rules",
                "operationId": "Access Control-get_all_macip_rules",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/MacIpAclRule"
                                    },
                                    "type": "array",
                                    "title": "Response Access Control-Get All Macip Rules"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Replace the entire MACIP Rule Set.",
                "description": "Replace the entire MACIP Rule Set with the provided list.",
                "operationId": "Access Control-set_macip_rules",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/MacIpAclRule"
                                },
                                "type": "array",
                                "title": "Rules"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Add New MACIP Access Control Rule",
                "description": "Add MACIP New Access Control Rule",
                "operationId": "Access Control-add_macip_rule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MacIpAclRule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Delete MACIP Access Control Rule",
                "description": "Delete MACIP Access Control Rule",
                "operationId": "Access Control-delete_macip_rule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MacIpAclRule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/crypto/v1/settings": {
            "get": {
                "tags": [
                    "Crypto"
                ],
                "summary": "Get the crypto settings.",
                "description": "Get the crypto settings.",
                "operationId": "Crypto-get_crypto_settings",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CryptoSettings"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Crypto"
                ],
                "summary": "Change the crypto settings.",
                "description": "Change the crypto settings.",
                "operationId": "Crypto-post_crypto_settings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CryptoSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/debug/v1/logs": {
            "get": {
                "tags": [
                    "Debug"
                ],
                "summary": "Get all system logs in a zip file",
                "description": "Get all system logs in a zip file",
                "operationId": "Debug-get_debug_log_files",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/x-gzip": {}
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/debug/v1/hang": {
            "post": {
                "tags": [
                    "Debug"
                ],
                "summary": "Debug hang the system by sleeping for 100 seconds",
                "operationId": "Debug-debug_cause_system_hang",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/debug/v1/set_shell_bash/{username}": {
            "post": {
                "tags": [
                    "Debug"
                ],
                "summary": "Set the users shell to bash and allow SSH bash command",
                "operationId": "Debug-debug_set_user_shell",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Username"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/debug/v1/restore_shell/{username}": {
            "post": {
                "tags": [
                    "Debug"
                ],
                "summary": "Reset the users shell to the default (restricted) shell and set the restricted SSH command",
                "operationId": "Debug-debug_reset_user_shell",
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Username"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/debug/v1/disable_sk_crypto": {
            "post": {
                "tags": [
                    "Debug"
                ],
                "summary": "Disable SK Crypto on the dataplane - reboot is needed to take effect",
                "operationId": "Debug-debug_disable_sk_crypto_syste",
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/debug/v1/enable_sk_crypto": {
            "post": {
                "tags": [
                    "Debug"
                ],
                "summary": "Enable SK Crypto on the dataplane - reboot is needed to take effect",
                "operationId": "Debug-debug_enable_sk_crypto_syste",
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AclAction": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2
                ],
                "title": "AclAction"
            },
            "AclStats": {
                "properties": {
                    "time": {
                        "type": "string",
                        "title": "Time",
                        "description": "System Time ISO formatted",
                        "examples": [
                            "2021-01-01T00:00:00+00:00"
                        ]
                    },
                    "rule_description": {
                        "type": "string",
                        "title": "Rule Description",
                        "description": "ACL Rule Tag Description"
                    },
                    "packets": {
                        "type": "integer",
                        "title": "Packets",
                        "description": "Packets Filtered by ACL"
                    },
                    "bytes": {
                        "type": "integer",
                        "title": "Bytes",
                        "description": "Bytes Filtered by ACL"
                    }
                },
                "type": "object",
                "required": [
                    "time",
                    "rule_description",
                    "packets",
                    "bytes"
                ],
                "title": "AclStats"
            },
            "Body_Authentication-login_for_access_token": {
                "properties": {
                    "grant_type": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "password"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Grant Type"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": ""
                    },
                    "client_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Id"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "password"
                ],
                "title": "Body_Authentication-login_for_access_token"
            },
            "Body_Certificates-post_ca_cert": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_Certificates-post_ca_cert"
            },
            "Body_Certificates-post_private_key": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_Certificates-post_private_key"
            },
            "Body_Certificates-post_syslog_cert": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_Certificates-post_syslog_cert"
            },
            "Body_Certificates-post_tls_cert": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_Certificates-post_tls_cert"
            },
            "Body_Certificates-post_user_cert": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_Certificates-post_user_cert"
            },
            "Body_System-post_swupdate_file": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_System-post_swupdate_file"
            },
            "CertDetailModel": {
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "title": "Fingerprint",
                        "description": "Unique Fingerprint"
                    },
                    "version": {
                        "type": "integer",
                        "title": "Version",
                        "description": "X.509 Version - X.509 v3 (0x2), X.509 v1 (0x0)",
                        "examples": [
                            0,
                            2
                        ]
                    },
                    "issuer": {
                        "type": "string",
                        "title": "Issuer",
                        "description": " Certificate Issuer"
                    },
                    "subject": {
                        "type": "string",
                        "title": "Subject",
                        "description": "Certificate Subject"
                    },
                    "serial_number": {
                        "type": "string",
                        "title": "Serial Number",
                        "description": "Certificate Serial Number"
                    },
                    "not_before": {
                        "type": "string",
                        "title": "Not Before",
                        "description": "Certificate Not Before"
                    },
                    "not_after": {
                        "type": "string",
                        "title": "Not After",
                        "description": "Certificate Not After"
                    },
                    "public_key": {
                        "type": "string",
                        "title": "Public Key",
                        "description": "Certificate Public Key"
                    },
                    "signature_algorithm": {
                        "type": "string",
                        "title": "Signature Algorithm",
                        "description": "Certificate Signature Algorithm"
                    },
                    "signature_algorithm_parameters": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Signature Algorithm Parameters",
                        "description": "Certificate Signature Algorithm Parameters"
                    },
                    "signature": {
                        "type": "string",
                        "title": "Signature",
                        "description": "Certificate Signature"
                    },
                    "signature_hash_algorithm": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Signature Hash Algorithm",
                        "description": "Certificate Signature Hash Algorithm"
                    },
                    "extensions_count": {
                        "type": "integer",
                        "title": "Extensions Count",
                        "description": "Certificate Extensions Count"
                    },
                    "extensions": {
                        "items": {
                            "$ref": "#/components/schemas/x509ExtensionsModel"
                        },
                        "type": "array",
                        "title": "Extensions",
                        "description": "Certificate Extensions"
                    }
                },
                "type": "object",
                "required": [
                    "fingerprint",
                    "version",
                    "issuer",
                    "subject",
                    "serial_number",
                    "not_before",
                    "not_after",
                    "public_key",
                    "signature_algorithm",
                    "signature_algorithm_parameters",
                    "signature",
                    "signature_hash_algorithm",
                    "extensions_count",
                    "extensions"
                ],
                "title": "CertDetailModel"
            },
            "CertHashEnum": {
                "type": "string",
                "enum": [
                    "SHA-256",
                    "SHA-384",
                    "SHA-512"
                ],
                "title": "CertHashEnum"
            },
            "CertInfoModel": {
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "title": "Fingerprint",
                        "description": "Unique Fingerprint"
                    },
                    "id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id",
                        "description": "Certificate ID",
                        "examples": [
                            "CN=user.strongswan.org"
                        ]
                    },
                    "is_ca": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Ca",
                        "description": "Boolean set ``true`` if certificate is a CA"
                    },
                    "usage": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CertUsageEnum"
                            }
                        ],
                        "description": "Certificate Usage",
                        "default": "ipsec"
                    },
                    "key_fingerprint": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Key Fingerprint",
                        "description": "Private Key Fingerprint"
                    }
                },
                "type": "object",
                "required": [
                    "fingerprint",
                    "is_ca"
                ],
                "title": "CertInfoModel"
            },
            "CertSigningRequestModel": {
                "properties": {
                    "alg_type": {
                        "type": "string",
                        "title": "Alg Type",
                        "description": "Private Key Algorithm Type",
                        "default": "RSA",
                        "examples": [
                            "RSA",
                            "EC"
                        ]
                    },
                    "key_size": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Key Size",
                        "description": "Key Size for RSA Requests",
                        "default": 4096,
                        "examples": [
                            4096
                        ]
                    },
                    "curve": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Curve",
                        "description": "Curve Name for Elliptic Curve Requests",
                        "default": "secp384r1",
                        "examples": [
                            "secp384r1"
                        ]
                    },
                    "hash": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CertHashEnum"
                            }
                        ],
                        "description": "Hash Algorithm",
                        "default": "SHA-384"
                    },
                    "cn": {
                        "type": "string",
                        "title": "Cn",
                        "description": "Common Name",
                        "examples": [
                            "user.org"
                        ]
                    },
                    "country": {
                        "type": "string",
                        "title": "Country",
                        "description": "Country Name",
                        "examples": [
                            "US"
                        ]
                    },
                    "locality": {
                        "type": "string",
                        "title": "Locality",
                        "description": "Locality Name",
                        "examples": [
                            "Los Angeles"
                        ]
                    },
                    "organization": {
                        "type": "string",
                        "title": "Organization",
                        "description": "Organization Name",
                        "examples": [
                            "JET Technology Labs Inc."
                        ]
                    },
                    "organization_unit": {
                        "type": "string",
                        "title": "Organization Unit",
                        "description": "Organizational Unit Name",
                        "examples": [
                            "Marketing"
                        ]
                    },
                    "state": {
                        "type": "string",
                        "title": "State",
                        "description": "State Name",
                        "examples": [
                            "California"
                        ]
                    },
                    "dns_names": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Dns Names",
                        "description": "DNS Name for Subject Alternative Name",
                        "default": [],
                        "examples": [
                            "user.org"
                        ]
                    },
                    "ip_addrs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Ip Addrs",
                        "description": "IP Address for Subject Alternative Name",
                        "default": [],
                        "examples": [
                            "1.2.3.4"
                        ]
                    },
                    "validity_days": {
                        "type": "integer",
                        "title": "Validity Days",
                        "description": "Validity in Days",
                        "default": 3650,
                        "examples": [
                            3650
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "cn",
                    "country",
                    "locality",
                    "organization",
                    "organization_unit",
                    "state"
                ],
                "title": "CertSigningRequestModel"
            },
            "CertUsageEnum": {
                "type": "string",
                "enum": [
                    "ipsec",
                    "https_client",
                    "https_server",
                    "syslog_client",
                    "syslog_ca"
                ],
                "title": "CertUsageEnum"
            },
            "ChildConnCreateModel": {
                "properties": {
                    "name": {
                        "type": "string",
                        "pattern": "^[-_()0-9a-zA-Z]+$",
                        "title": "Name",
                        "description": "Name Field ",
                        "examples": [
                            "string_name-123"
                        ]
                    },
                    "encr_alg": {
                        "type": "string",
                        "title": "Encr Alg",
                        "description": "Encryption Algorithm",
                        "default": "AES_GCM_16",
                        "examples": [
                            "AES_GCM_16"
                        ],
                        "key": "encr-alg"
                    },
                    "encr_keysize": {
                        "type": "integer",
                        "title": "Encr Keysize",
                        "description": "Encryption Key size in Bits",
                        "default": 256,
                        "examples": [
                            256
                        ],
                        "key": "encr-keysize"
                    },
                    "dh_group": {
                        "type": "string",
                        "title": "Dh Group",
                        "description": "DH Group Name",
                        "default": "MODP_4096",
                        "examples": [
                            "MODP_4096",
                            "ECP384"
                        ],
                        "key": "dh-group"
                    },
                    "mode": {
                        "type": "string",
                        "title": "Mode",
                        "description": "Tunnel or Transport Mode",
                        "default": "TUNNEL",
                        "examples": [
                            "TUNNEL"
                        ]
                    },
                    "protocol": {
                        "type": "string",
                        "title": "Protocol",
                        "description": "Protocol Name",
                        "default": "ESP",
                        "examples": [
                            "ESP"
                        ]
                    },
                    "rekey_time": {
                        "type": "integer",
                        "title": "Rekey Time",
                        "description": "Rekey Time Seconds",
                        "default": 3600,
                        "examples": [
                            6000
                        ],
                        "key": "rekey-time"
                    },
                    "life_time": {
                        "type": "integer",
                        "title": "Life Time",
                        "description": "Life Time Seconds",
                        "default": 6000,
                        "examples": [
                            6000
                        ],
                        "key": " life-time"
                    },
                    "esn": {
                        "type": "boolean",
                        "title": "Esn",
                        "description": "Extended Sequence Number",
                        "default": false
                    },
                    "local_ts": {
                        "items": {
                            "$ref": "#/components/schemas/IpSubnetModel"
                        },
                        "type": "array",
                        "title": "Local Ts",
                        "description": "Local Traffic Selectors",
                        "key": " local-ts"
                    },
                    "remote_ts": {
                        "items": {
                            "$ref": "#/components/schemas/IpSubnetModel"
                        },
                        "type": "array",
                        "title": "Remote Ts",
                        "description": "Remote Traffic Selectors",
                        "key": " remote-ts"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "local_ts",
                    "remote_ts"
                ],
                "title": "ChildConnCreateModel"
            },
            "ChildConnModel": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Child SA Name",
                        "examples": [
                            "net1-net2"
                        ]
                    },
                    "mode": {
                        "type": "string",
                        "title": "Mode",
                        "description": "Tunnel or Transport Mode",
                        "examples": [
                            "TUNNEL"
                        ]
                    },
                    "rekey_time": {
                        "type": "integer",
                        "title": "Rekey Time",
                        "description": "Re-Key Seconds"
                    },
                    "rekey_bytes": {
                        "type": "integer",
                        "title": "Rekey Bytes",
                        "description": "Re-Key Bytes"
                    },
                    "rekey_packets": {
                        "type": "integer",
                        "title": "Rekey Packets",
                        "description": "Re-Key Packets"
                    },
                    "dpd_action": {
                        "type": "string",
                        "title": "Dpd Action",
                        "description": "DPD Action"
                    },
                    "close_action": {
                        "type": "string",
                        "title": "Close Action",
                        "description": "Close Action"
                    },
                    "local_ts": {
                        "items": {
                            "$ref": "#/components/schemas/IpSubnetModel"
                        },
                        "type": "array",
                        "title": "Local Ts",
                        "description": "Local Traffic Selectors"
                    },
                    "remote_ts": {
                        "items": {
                            "$ref": "#/components/schemas/IpSubnetModel"
                        },
                        "type": "array",
                        "title": "Remote Ts",
                        "description": "Remote Traffic Selectors"
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "name",
                    "mode",
                    "rekey_time",
                    "rekey_bytes",
                    "rekey_packets",
                    "dpd_action",
                    "close_action",
                    "local_ts",
                    "remote_ts"
                ],
                "title": "ChildConnModel"
            },
            "ChildSAModel": {
                "properties": {
                    "name": {
                        "type": "string",
                        "pattern": "^[-_()0-9a-zA-Z]+$",
                        "title": "Name",
                        "description": "Name Field ",
                        "examples": [
                            "string_name-123"
                        ]
                    },
                    "encr_alg": {
                        "type": "string",
                        "title": "Encr Alg",
                        "description": "Encryption Algorithm",
                        "default": "AES_GCM_16",
                        "examples": [
                            "AES_GCM_16"
                        ],
                        "key": "encr-alg"
                    },
                    "encr_keysize": {
                        "type": "integer",
                        "title": "Encr Keysize",
                        "description": "Encryption Key size in Bits",
                        "default": 256,
                        "examples": [
                            256
                        ],
                        "key": "encr-keysize"
                    },
                    "dh_group": {
                        "type": "string",
                        "title": "Dh Group",
                        "description": "DH Group Name",
                        "default": "MODP_4096",
                        "examples": [
                            "MODP_4096",
                            "ECP384"
                        ],
                        "key": "dh-group"
                    },
                    "mode": {
                        "type": "string",
                        "title": "Mode",
                        "description": "Tunnel or Transport Mode",
                        "default": "TUNNEL",
                        "examples": [
                            "TUNNEL"
                        ]
                    },
                    "protocol": {
                        "type": "string",
                        "title": "Protocol",
                        "description": "Protocol Name",
                        "default": "ESP",
                        "examples": [
                            "ESP"
                        ]
                    },
                    "rekey_time": {
                        "type": "integer",
                        "title": "Rekey Time",
                        "description": "Rekey Time Seconds",
                        "default": 3600,
                        "examples": [
                            6000
                        ],
                        "key": "rekey-time"
                    },
                    "life_time": {
                        "type": "integer",
                        "title": "Life Time",
                        "description": "Life Time Seconds",
                        "default": 6000,
                        "examples": [
                            6000
                        ],
                        "key": " life-time"
                    },
                    "esn": {
                        "type": "boolean",
                        "title": "Esn",
                        "description": "Extended Sequence Number",
                        "default": false
                    },
                    "local_ts": {
                        "items": {
                            "$ref": "#/components/schemas/IpSubnetModel"
                        },
                        "type": "array",
                        "title": "Local Ts",
                        "description": "Local Traffic Selectors",
                        "key": " local-ts"
                    },
                    "remote_ts": {
                        "items": {
                            "$ref": "#/components/schemas/IpSubnetModel"
                        },
                        "type": "array",
                        "title": "Remote Ts",
                        "description": "Remote Traffic Selectors",
                        "key": " remote-ts"
                    },
                    "uniqueid": {
                        "type": "string",
                        "title": "Uniqueid",
                        "description": "Unique ID for this SA"
                    },
                    "reqid": {
                        "type": "string",
                        "title": "Reqid",
                        "description": "Req ID for this SA"
                    },
                    "state": {
                        "type": "string",
                        "title": "State",
                        "description": "State of this SA",
                        "examples": [
                            "ESTABLISHED"
                        ]
                    },
                    "spi_in": {
                        "type": "string",
                        "title": "Spi In",
                        "description": "Input SPI Value hex string",
                        "examples": [
                            "17c06cc2fc722e8a"
                        ],
                        "key": " spi-in"
                    },
                    "spi_out": {
                        "type": "string",
                        "title": "Spi Out",
                        "description": "Output SPI Value hex string",
                        "examples": [
                            "17c06cc2fc722e8a"
                        ],
                        "key": " spi-out"
                    },
                    "bytes_in": {
                        "type": "integer",
                        "title": "Bytes In",
                        "description": "Bytes Input",
                        "examples": [
                            1000
                        ],
                        "key": " bytes-in"
                    },
                    "packets_in": {
                        "type": "integer",
                        "title": "Packets In",
                        "description": "Packets Input",
                        "examples": [
                            1000
                        ],
                        "key": " packets-in"
                    },
                    "bytes_out": {
                        "type": "integer",
                        "title": "Bytes Out",
                        "description": "Bytes Output",
                        "examples": [
                            1000
                        ],
                        "key": " bytes-out"
                    },
                    "packets_out": {
                        "type": "integer",
                        "title": "Packets Out",
                        "description": "Packets Output",
                        "examples": [
                            1000
                        ],
                        "key": " packets-out"
                    },
                    "install_time": {
                        "type": "integer",
                        "title": "Install Time",
                        "description": "Install Time Seconds",
                        "examples": [
                            6000
                        ],
                        "key": " install-time"
                    },
                    "encap": {
                        "type": "boolean",
                        "title": "Encap",
                        "description": "True if UDP Encapslation (NAT Traversal) is enabled",
                        "default": false
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "name",
                    "local_ts",
                    "remote_ts",
                    "uniqueid",
                    "reqid",
                    "state",
                    "spi_in",
                    "spi_out",
                    "bytes_in",
                    "packets_in",
                    "bytes_out",
                    "packets_out",
                    "install_time"
                ],
                "title": "ChildSAModel"
            },
            "ComponentEnum": {
                "type": "string",
                "enum": [
                    "vpp",
                    "charon",
                    "ssh",
                    "crypto",
                    "https"
                ],
                "title": "ComponentEnum"
            },
            "ConnCreateModel-Input": {
                "properties": {
                    "name": {
                        "type": "string",
                        "pattern": "^[-_()0-9a-zA-Z]+$",
                        "title": "Name",
                        "description": "Name Field ",
                        "examples": [
                            "string_name-123"
                        ]
                    },
                    "encr_alg": {
                        "type": "string",
                        "title": "Encr Alg",
                        "description": "Encryption Algorithm",
                        "default": "AES_GCM_16",
                        "examples": [
                            "AES_GCM_16"
                        ],
                        "key": "encr-alg"
                    },
                    "encr_keysize": {
                        "type": "integer",
                        "title": "Encr Keysize",
                        "description": "Encryption Key size in Bits",
                        "default": 256,
                        "examples": [
                            256
                        ],
                        "key": "encr-keysize"
                    },
                    "dh_group": {
                        "type": "string",
                        "title": "Dh Group",
                        "description": "DH Group Name",
                        "default": "MODP_4096",
                        "examples": [
                            "MODP_4096",
                            "ECP384"
                        ],
                        "key": "dh-group"
                    },
                    "version": {
                        "type": "integer",
                        "title": "Version",
                        "description": "IKEv1/2 Version integer",
                        "default": 2,
                        "examples": [
                            1,
                            2
                        ]
                    },
                    "local_host": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IPorDNSNameModel"
                            }
                        ],
                        "description": "Local IP Address",
                        "key": " local-host"
                    },
                    "local_port": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Local Port",
                        "description": "Local Port Number",
                        "default": 4500,
                        "examples": [
                            4500
                        ],
                        "key": " local-port"
                    },
                    "local_id": {
                        "type": "string",
                        "title": "Local Id",
                        "description": "Local Certificate ID",
                        "examples": [
                            "CN=user1.strongswan.org"
                        ],
                        "key": " local-id"
                    },
                    "local_cert_fingerprint": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Local Cert Fingerprint",
                        "description": "Local Certificate Fingerprint"
                    },
                    "remote_host": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IPorDNSNameModel"
                            }
                        ],
                        "description": "Remote IP Address",
                        "key": " remote-host"
                    },
                    "remote_port": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Remote Port",
                        "description": "Remote Port Number",
                        "default": 4500,
                        "examples": [
                            4500
                        ],
                        "key": " remote-port"
                    },
                    "remote_id": {
                        "type": "string",
                        "title": "Remote Id",
                        "description": "Remote Certificate ID",
                        "examples": [
                            "CN=user2.strongswan.org"
                        ],
                        "key": " remote-id"
                    },
                    "remote_cacerts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Remote Cacerts",
                        "description": "Remote CA Certificate IDs",
                        "default": [],
                        "examples": [
                            "CN=CA2.strongswan.org"
                        ],
                        "key": "cacert"
                    },
                    "prf_alg": {
                        "type": "string",
                        "title": "Prf Alg",
                        "description": "Pseudo Random Function",
                        "default": "PRF_HMAC_SHA2_384",
                        "examples": [
                            "PRF_HMAC_SHA2_384"
                        ],
                        "key": " prf-alg"
                    },
                    "rekey_time": {
                        "type": "integer",
                        "title": "Rekey Time",
                        "description": "Rekey Interval in seconds, Default=4 hours, Disabled=0",
                        "default": 14400,
                        "examples": [
                            6000
                        ],
                        "key": " rekey-time"
                    },
                    "reauth_time": {
                        "type": "integer",
                        "title": "Reauth Time",
                        "description": "IKE Reauthentication Interval in seconds, Default=0, Disabled=0",
                        "default": 0,
                        "examples": [
                            3600
                        ],
                        "key": " reauth-time"
                    },
                    "child_sas": {
                        "items": {
                            "$ref": "#/components/schemas/ChildConnCreateModel"
                        },
                        "type": "array",
                        "title": "Child Sas",
                        "description": "Child SAs",
                        "key": " child-sas"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "local_host",
                    "local_id",
                    "remote_host",
                    "remote_id",
                    "child_sas"
                ],
                "title": "ConnCreateModel"
            },
            "ConnCreateModel-Output": {
                "properties": {
                    "name": {
                        "type": "string",
                        "pattern": "^[-_()0-9a-zA-Z]+$",
                        "title": "Name",
                        "description": "Name Field ",
                        "examples": [
                            "string_name-123"
                        ]
                    },
                    "encr_alg": {
                        "type": "string",
                        "title": "Encr Alg",
                        "description": "Encryption Algorithm",
                        "default": "AES_GCM_16",
                        "examples": [
                            "AES_GCM_16"
                        ],
                        "key": "encr-alg"
                    },
                    "encr_keysize": {
                        "type": "integer",
                        "title": "Encr Keysize",
                        "description": "Encryption Key size in Bits",
                        "default": 256,
                        "examples": [
                            256
                        ],
                        "key": "encr-keysize"
                    },
                    "dh_group": {
                        "type": "string",
                        "title": "Dh Group",
                        "description": "DH Group Name",
                        "default": "MODP_4096",
                        "examples": [
                            "MODP_4096",
                            "ECP384"
                        ],
                        "key": "dh-group"
                    },
                    "version": {
                        "type": "integer",
                        "title": "Version",
                        "description": "IKEv1/2 Version integer",
                        "default": 2,
                        "examples": [
                            1,
                            2
                        ]
                    },
                    "local_host": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IPorDNSNameModel"
                            }
                        ],
                        "description": "Local IP Address",
                        "key": " local-host"
                    },
                    "local_port": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Local Port",
                        "description": "Local Port Number",
                        "default": 4500,
                        "examples": [
                            4500
                        ],
                        "key": " local-port"
                    },
                    "local_id": {
                        "type": "string",
                        "title": "Local Id",
                        "description": "Local Certificate ID",
                        "examples": [
                            "CN=user1.strongswan.org"
                        ],
                        "key": " local-id"
                    },
                    "local_cert_fingerprint": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Local Cert Fingerprint",
                        "description": "Local Certificate Fingerprint"
                    },
                    "remote_host": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IPorDNSNameModel"
                            }
                        ],
                        "description": "Remote IP Address",
                        "key": " remote-host"
                    },
                    "remote_port": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Remote Port",
                        "description": "Remote Port Number",
                        "default": 4500,
                        "examples": [
                            4500
                        ],
                        "key": " remote-port"
                    },
                    "remote_id": {
                        "type": "string",
                        "title": "Remote Id",
                        "description": "Remote Certificate ID",
                        "examples": [
                            "CN=user2.strongswan.org"
                        ],
                        "key": " remote-id"
                    },
                    "remote_cacerts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Remote Cacerts",
                        "description": "Remote CA Certificate IDs",
                        "default": [],
                        "examples": [
                            "CN=CA2.strongswan.org"
                        ],
                        "key": "cacert"
                    },
                    "prf_alg": {
                        "type": "string",
                        "title": "Prf Alg",
                        "description": "Pseudo Random Function",
                        "default": "PRF_HMAC_SHA2_384",
                        "examples": [
                            "PRF_HMAC_SHA2_384"
                        ],
                        "key": " prf-alg"
                    },
                    "rekey_time": {
                        "type": "integer",
                        "title": "Rekey Time",
                        "description": "Rekey Interval in seconds, Default=4 hours, Disabled=0",
                        "default": 14400,
                        "examples": [
                            6000
                        ],
                        "key": " rekey-time"
                    },
                    "reauth_time": {
                        "type": "integer",
                        "title": "Reauth Time",
                        "description": "IKE Reauthentication Interval in seconds, Default=0, Disabled=0",
                        "default": 0,
                        "examples": [
                            3600
                        ],
                        "key": " reauth-time"
                    },
                    "child_sas": {
                        "items": {
                            "$ref": "#/components/schemas/ChildConnCreateModel"
                        },
                        "type": "array",
                        "title": "Child Sas",
                        "description": "Child SAs",
                        "key": " child-sas"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "local_host",
                    "local_id",
                    "remote_host",
                    "remote_id",
                    "child_sas"
                ],
                "title": "ConnCreateModel"
            },
            "ConnectionModel": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "IPsec Connection Name",
                        "examples": [
                            "Connection-1"
                        ]
                    },
                    "local_addrs": {
                        "items": {
                            "$ref": "#/components/schemas/IPorDNSNameModel"
                        },
                        "type": "array",
                        "title": "Local Addrs",
                        "description": "Local Addressess"
                    },
                    "remote_addrs": {
                        "items": {
                            "$ref": "#/components/schemas/IPorDNSNameModel"
                        },
                        "type": "array",
                        "title": "Remote Addrs",
                        "description": "Remote Addressess"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version",
                        "description": "IKEv1/2 Version"
                    },
                    "reauth_time": {
                        "type": "integer",
                        "title": "Reauth Time",
                        "description": "Re-Authentication Time in Seconds",
                        "default": 0
                    },
                    "rekey_time": {
                        "type": "integer",
                        "title": "Rekey Time",
                        "description": "Re-Key Time in Seconds"
                    },
                    "unique": {
                        "type": "string",
                        "title": "Unique",
                        "description": "Unique name for this Connection"
                    },
                    "local_1": {
                        "items": {
                            "$ref": "#/components/schemas/SACertModel"
                        },
                        "type": "array",
                        "title": "Local 1",
                        "description": "List of Local SAs"
                    },
                    "remote_1": {
                        "items": {
                            "$ref": "#/components/schemas/SACertModel"
                        },
                        "type": "array",
                        "title": "Remote 1",
                        "description": "List of Remote SAs"
                    },
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/ChildConnModel"
                        },
                        "type": "array",
                        "title": "Children",
                        "description": "List of Children SAs"
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "name",
                    "local_addrs",
                    "remote_addrs",
                    "version",
                    "rekey_time",
                    "unique",
                    "local_1",
                    "remote_1",
                    "children"
                ],
                "title": "ConnectionModel"
            },
            "CryptoSettings": {
                "properties": {
                    "async_enabled": {
                        "type": "boolean",
                        "title": "Async Enabled",
                        "description": "True if Async Crypto is enabled",
                        "default": true
                    },
                    "secure_key_enabled": {
                        "type": "boolean",
                        "title": "Secure Key Enabled",
                        "description": "True if Secure Key Crypto Engine is enabled. Changing this setting requires a reboot",
                        "default": true
                    }
                },
                "type": "object",
                "title": "CryptoSettings"
            },
            "CsrResponseModel": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique ID for the CSR"
                    },
                    "fingerprint": {
                        "type": "string",
                        "title": "Fingerprint",
                        "description": "Private Key Fingerprint"
                    },
                    "csr_data": {
                        "type": "string",
                        "title": "Csr Data",
                        "description": "PEM formatted Certificate Signing Request"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "fingerprint",
                    "csr_data"
                ],
                "title": "CsrResponseModel"
            },
            "CsrSignedRequestModel": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique ID for the CSR"
                    },
                    "fingerprint": {
                        "type": "string",
                        "title": "Fingerprint",
                        "description": "Private Key Fingerprint"
                    },
                    "cert_data": {
                        "type": "string",
                        "title": "Cert Data",
                        "description": "PEM formatted Public Certificate Data"
                    },
                    "usage": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CertUsageEnum"
                            }
                        ],
                        "description": "Certificate Usage",
                        "default": "ipsec"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "fingerprint",
                    "cert_data"
                ],
                "title": "CsrSignedRequestModel"
            },
            "CsrUuidModel": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique ID for the CSR"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "CsrUuidModel"
            },
            "DNSConfigModel-Input": {
                "properties": {
                    "servers": {
                        "items": {
                            "$ref": "#/components/schemas/DNSServer"
                        },
                        "type": "array",
                        "title": "Servers",
                        "description": "DNS IP address",
                        "default": [
                            {
                                "ip": "1.1.1.1",
                                "port": 53
                            },
                            {
                                "ip": "1.0.0.1",
                                "port": 53
                            },
                            {
                                "ip": "8.8.8.8",
                                "port": 53
                            },
                            {
                                "ip": "8.8.4.4",
                                "port": 53
                            },
                            {
                                "ip": "2606:4700:4700::1111",
                                "port": 53
                            },
                            {
                                "ip": "2606:4700:4700::1001",
                                "port": 53
                            },
                            {
                                "ip": "2001:4860:4860::8888",
                                "port": 53
                            },
                            {
                                "ip": "2001:4860:4860::8844",
                                "port": 53
                            }
                        ]
                    },
                    "dnssec": {
                        "type": "boolean",
                        "title": "Dnssec",
                        "description": "True if DNSSEC is enabled",
                        "default": false
                    },
                    "fallback_servers": {
                        "items": {
                            "$ref": "#/components/schemas/DNSServer"
                        },
                        "type": "array",
                        "title": "Fallback Servers",
                        "description": "Fallback DNS IP address - Default to Goole and Cloudflare",
                        "default": [
                            {
                                "ip": "1.1.1.1",
                                "port": 53
                            },
                            {
                                "ip": "1.0.0.1",
                                "port": 53
                            },
                            {
                                "ip": "8.8.8.8",
                                "port": 53
                            },
                            {
                                "ip": "8.8.4.4",
                                "port": 53
                            },
                            {
                                "ip": "2606:4700:4700::1111",
                                "port": 53
                            },
                            {
                                "ip": "2606:4700:4700::1001",
                                "port": 53
                            },
                            {
                                "ip": "2001:4860:4860::8888",
                                "port": 53
                            },
                            {
                                "ip": "2001:4860:4860::8844",
                                "port": 53
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "DNSConfigModel"
            },
            "DNSConfigModel-Output": {
                "properties": {
                    "servers": {
                        "items": {
                            "$ref": "#/components/schemas/DNSServer"
                        },
                        "type": "array",
                        "title": "Servers",
                        "description": "DNS IP address",
                        "default": [
                            {
                                "ip": "1.1.1.1",
                                "port": 53
                            },
                            {
                                "ip": "1.0.0.1",
                                "port": 53
                            },
                            {
                                "ip": "8.8.8.8",
                                "port": 53
                            },
                            {
                                "ip": "8.8.4.4",
                                "port": 53
                            },
                            {
                                "ip": "2606:4700:4700::1111",
                                "port": 53
                            },
                            {
                                "ip": "2606:4700:4700::1001",
                                "port": 53
                            },
                            {
                                "ip": "2001:4860:4860::8888",
                                "port": 53
                            },
                            {
                                "ip": "2001:4860:4860::8844",
                                "port": 53
                            }
                        ]
                    },
                    "dnssec": {
                        "type": "boolean",
                        "title": "Dnssec",
                        "description": "True if DNSSEC is enabled",
                        "default": false
                    },
                    "fallback_servers": {
                        "items": {
                            "$ref": "#/components/schemas/DNSServer"
                        },
                        "type": "array",
                        "title": "Fallback Servers",
                        "description": "Fallback DNS IP address - Default to Goole and Cloudflare",
                        "default": [
                            {
                                "ip": "1.1.1.1",
                                "port": 53
                            },
                            {
                                "ip": "1.0.0.1",
                                "port": 53
                            },
                            {
                                "ip": "8.8.8.8",
                                "port": 53
                            },
                            {
                                "ip": "8.8.4.4",
                                "port": 53
                            },
                            {
                                "ip": "2606:4700:4700::1111",
                                "port": 53
                            },
                            {
                                "ip": "2606:4700:4700::1001",
                                "port": 53
                            },
                            {
                                "ip": "2001:4860:4860::8888",
                                "port": 53
                            },
                            {
                                "ip": "2001:4860:4860::8844",
                                "port": 53
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "DNSConfigModel"
            },
            "DNSServer": {
                "properties": {
                    "ip": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "ipv4"
                            },
                            {
                                "type": "string",
                                "format": "ipv6"
                            }
                        ],
                        "title": "Ip",
                        "description": "DNS IP address"
                    },
                    "port": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Port",
                        "description": "Port",
                        "default": 53
                    },
                    "domain": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/HostnameModel"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "DNS Domains"
                    }
                },
                "type": "object",
                "required": [
                    "ip"
                ],
                "title": "DNSServer"
            },
            "DpStats": {
                "properties": {
                    "time": {
                        "type": "string",
                        "title": "Time",
                        "description": "System Time ISO formatted",
                        "examples": [
                            "2021-01-01T00:00:00+00:00"
                        ]
                    },
                    "stats": {
                        "items": {
                            "$ref": "#/components/schemas/NameValue"
                        },
                        "type": "array",
                        "title": "Stats",
                        "description": "Statistics List"
                    }
                },
                "type": "object",
                "required": [
                    "time",
                    "stats"
                ],
                "title": "DpStats"
            },
            "FileDataModel": {
                "properties": {
                    "file_name": {
                        "type": "string",
                        "title": "File Name",
                        "description": "Filename"
                    },
                    "data": {
                        "type": "string",
                        "format": "binary",
                        "title": "Data",
                        "description": "File Data"
                    }
                },
                "type": "object",
                "required": [
                    "file_name",
                    "data"
                ],
                "title": "FileDataModel"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HostnameModel": {
                "properties": {
                    "hostname": {
                        "type": "string",
                        "title": "Hostname",
                        "description": "Hostname ",
                        "examples": [
                            "hostname"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "hostname"
                ],
                "title": "HostnameModel"
            },
            "IPorDNSNameModel": {
                "properties": {
                    "host": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "ipvanyaddress"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "title": "Host",
                        "description": "IPv4, IPv6 Address or DNS Host Name (RFC 2181 compliant)",
                        "examples": [
                            "237.84.2.178",
                            "5be8:dde9:7f0b:d5a7:bd01:b3be:9c69:573b",
                            "test.example.com",
                            "%any"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "host"
                ],
                "title": "IPorDNSNameModel"
            },
            "IfaceRoleSet": {
                "properties": {
                    "wan_mac_addr": {
                        "type": "string",
                        "title": "Wan Mac Addr",
                        "description": "Interface MAC Address",
                        "examples": [
                            "00:11:22:33:44:55"
                        ],
                        "vpp_api": "l2_address"
                    },
                    "lan_mac_addr": {
                        "type": "string",
                        "title": "Lan Mac Addr",
                        "description": "Interface MAC Address",
                        "examples": [
                            "00:11:22:33:44:55"
                        ],
                        "vpp_api": "l2_address"
                    }
                },
                "type": "object",
                "required": [
                    "wan_mac_addr",
                    "lan_mac_addr"
                ],
                "title": "IfaceRoleSet"
            },
            "IfaceRoleTypes": {
                "type": "string",
                "enum": [
                    "wan",
                    "lan",
                    "mgmt"
                ],
                "title": "IfaceRoleTypes"
            },
            "IfaceSettings": {
                "properties": {
                    "sw_if_index": {
                        "type": "integer",
                        "title": "Sw If Index",
                        "description": "Interface Index",
                        "examples": [
                            0
                        ],
                        "vpp_api": "sw_if_index"
                    },
                    "if_name": {
                        "type": "string",
                        "title": "If Name",
                        "description": "Interface Name",
                        "examples": [
                            "eth0"
                        ],
                        "vpp_api": "interface_name"
                    },
                    "if_type": {
                        "type": "string",
                        "title": "If Type",
                        "description": "Interface Type",
                        "examples": [
                            "IF_API_TYPE_HARDWARE",
                            "IF_API_TYPE_P2P",
                            "IF_API_TYPE_SUBIF"
                        ],
                        "vpp_api": "type"
                    },
                    "mac_addr": {
                        "type": "string",
                        "title": "Mac Addr",
                        "description": "Interface MAC Address",
                        "examples": [
                            "00:11:22:33:44:55"
                        ],
                        "vpp_api": "l2_address"
                    },
                    "flags": {
                        "type": "string",
                        "title": "Flags",
                        "description": "Interface Flags",
                        "examples": [
                            "IF_STATUS_API_FLAG_LINK_UP"
                        ],
                        "vpp_api": "flags"
                    },
                    "link_duplex": {
                        "type": "string",
                        "title": "Link Duplex",
                        "description": "Link Duplex",
                        "examples": [
                            "LINK_DUPLEX_API_FULL",
                            "LINK_DUPLEX_API_HALF"
                        ],
                        "vpp_api": "link_duplex"
                    },
                    "link_speed": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Link Speed",
                        "description": "Link Speed",
                        "examples": [
                            1000
                        ],
                        "vpp_api": "link_speed"
                    },
                    "link_mtu": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Link Mtu",
                        "description": "Link MTU",
                        "examples": [
                            1500
                        ],
                        "vpp_api": "link_mtu"
                    },
                    "sub_id": {
                        "type": "integer",
                        "title": "Sub Id",
                        "description": "A number 0-N to uniquely identify this subif on super if",
                        "examples": [
                            1
                        ],
                        "vpp_api": "sub_id"
                    },
                    "sub_number_of_tags": {
                        "type": "integer",
                        "title": "Sub Number Of Tags",
                        "description": "Number of tags (0 - 2)",
                        "examples": [
                            0
                        ],
                        "vpp_api": "sub_number_of_tags"
                    },
                    "vlanid": {
                        "type": "integer",
                        "title": "Vlanid",
                        "description": "VLAN ID",
                        "examples": [
                            100
                        ],
                        "vpp_api": "b_vlanid"
                    },
                    "ip_addrs": {
                        "items": {
                            "$ref": "#/components/schemas/IpSubnetModel"
                        },
                        "type": "array",
                        "title": "Ip Addrs",
                        "description": "Interface IP Addresses",
                        "default": []
                    },
                    "interface_role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IfaceRoleTypes"
                            }
                        ],
                        "description": "Interface Role"
                    }
                },
                "type": "object",
                "required": [
                    "sw_if_index",
                    "if_name",
                    "if_type",
                    "mac_addr",
                    "flags",
                    "link_duplex",
                    "link_speed",
                    "link_mtu",
                    "sub_id",
                    "sub_number_of_tags",
                    "vlanid",
                    "interface_role"
                ],
                "title": "IfaceSettings"
            },
            "IpAclRule": {
                "properties": {
                    "is_permit": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AclAction"
                            }
                        ],
                        "description": "Rule Action"
                    },
                    "src_prefix": {
                        "type": "string",
                        "format": "ipv4network",
                        "title": "Src Prefix",
                        "description": "Source Prefix"
                    },
                    "dst_prefix": {
                        "type": "string",
                        "format": "ipv4network",
                        "title": "Dst Prefix",
                        "description": "Source Prefix"
                    },
                    "proto": {
                        "type": "integer",
                        "maximum": 255.0,
                        "minimum": 0.0,
                        "title": "Proto",
                        "description": "Protocol"
                    },
                    "src_port_first": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Src Port First",
                        "description": "Source Port First",
                        "default": 0
                    },
                    "src_port_last": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Src Port Last",
                        "description": "Source Port Last",
                        "default": 0
                    },
                    "dst_port_first": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Dst Port First",
                        "description": "Destination Port First",
                        "default": 0
                    },
                    "dst_port_last": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Dst Port Last",
                        "description": "Destination Port Last",
                        "default": 0
                    },
                    "tcp_flags_mask": {
                        "type": "integer",
                        "maximum": 255.0,
                        "minimum": 0.0,
                        "title": "Tcp Flags Mask",
                        "description": "TCP Flags",
                        "default": 0
                    },
                    "tcp_flags_value": {
                        "type": "integer",
                        "maximum": 255.0,
                        "minimum": 0.0,
                        "title": "Tcp Flags Value",
                        "description": "TCP Flags",
                        "default": 0
                    },
                    "is_input": {
                        "type": "boolean",
                        "title": "Is Input",
                        "description": "Input or Output"
                    },
                    "interface_role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IfaceRoleTypes"
                            }
                        ],
                        "description": "Interface to apply this rule to",
                        "default": "wan"
                    },
                    "priority": {
                        "type": "integer",
                        "maximum": 4294967295.0,
                        "minimum": 0.0,
                        "title": "Priority",
                        "description": "Priority in which to apply this rule (highest priority Rules are applied first)",
                        "default": 0
                    }
                },
                "type": "object",
                "required": [
                    "is_permit",
                    "src_prefix",
                    "dst_prefix",
                    "proto",
                    "is_input"
                ],
                "title": "IpAclRule",
                "description": "ACL IP Rules permit traffic based on a number of Layer3/Layer4 fields"
            },
            "IpModel": {
                "properties": {
                    "ip": {
                        "type": "string",
                        "format": "ipvanyaddress",
                        "title": "Ip",
                        "description": "IPv4 or IPv6 Address",
                        "examples": [
                            "237.84.2.178",
                            "5be8:dde9:7f0b:d5a7:bd01:b3be:9c69:573b"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "ip"
                ],
                "title": "IpModel"
            },
            "IpSubnetModel": {
                "properties": {
                    "subnet": {
                        "type": "string",
                        "format": "ipvanyinterface",
                        "title": "Subnet",
                        "description": "IPv4 or IPv6 Subnet",
                        "examples": [
                            "237.84.2.178/24",
                            "5be8:dde9:7f0b:d5a7:bd01:b3be:9c69:573b/64"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "subnet"
                ],
                "title": "IpSubnetModel"
            },
            "JobNumber": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id",
                        "description": "Job Number ID - check /sys/v1/job-status/<id> for status"
                    },
                    "descritpion": {
                        "type": "string",
                        "title": "Descritpion",
                        "description": "Description of the Job",
                        "default": ""
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ],
                "title": "JobNumber"
            },
            "JobStatus": {
                "properties": {
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobStatusEnum"
                            }
                        ],
                        "description": "Job Status"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "JobStatus"
            },
            "JobStatusEnum": {
                "type": "string",
                "enum": [
                    "IDLE",
                    "RUNNING",
                    "COMPLETED",
                    "FAILED"
                ],
                "title": "JobStatusEnum"
            },
            "KeyFingerprint": {
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "title": "Fingerprint",
                        "description": "Unique Fingerprint"
                    }
                },
                "type": "object",
                "required": [
                    "fingerprint"
                ],
                "title": "KeyFingerprint"
            },
            "KeyInfoModel": {
                "properties": {
                    "key_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Key Id",
                        "description": "Unique ID for the loaded key (different than KeyInfoModel.fingerprint)"
                    },
                    "fingerprint": {
                        "type": "string",
                        "title": "Fingerprint",
                        "description": "Unique Fingerprint"
                    },
                    "algorithm": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Algorithm",
                        "description": "Key Algorithm or Curve Name",
                        "examples": [
                            "RSA",
                            "secp384r1"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "fingerprint",
                    "algorithm"
                ],
                "title": "KeyInfoModel"
            },
            "KeyLoadedInfoModel": {
                "properties": {
                    "key_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Key Id",
                        "description": "Unique ID for the loaded key (different than KeyInfoModel.fingerprint)"
                    }
                },
                "type": "object",
                "title": "KeyLoadedInfoModel"
            },
            "MacIpAclRule": {
                "properties": {
                    "is_permit": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AclAction"
                            }
                        ],
                        "description": "Rule Action"
                    },
                    "src_mac": {
                        "type": "string",
                        "title": "Src Mac",
                        "description": "Source MAC Address"
                    },
                    "src_mac_mask": {
                        "type": "string",
                        "title": "Src Mac Mask",
                        "description": "Source MAC Address Mask"
                    },
                    "src_prefix": {
                        "type": "string",
                        "format": "ipv4network",
                        "title": "Src Prefix",
                        "description": "Source Prefix"
                    },
                    "interface_role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IfaceRoleTypes"
                            }
                        ],
                        "description": "Interface to apply this rule to",
                        "default": "wan"
                    },
                    "priority": {
                        "type": "integer",
                        "maximum": 4294967295.0,
                        "minimum": 0.0,
                        "title": "Priority",
                        "description": "Priority in which to apply this rule (highest priority Rules are applied first)",
                        "default": 0
                    }
                },
                "type": "object",
                "required": [
                    "is_permit",
                    "src_mac",
                    "src_mac_mask",
                    "src_prefix"
                ],
                "title": "MacIpAclRule",
                "description": "MACIP ACL Rules are ingress only ACL which permit/deny traffic based MAC and IP address matches"
            },
            "MachineIDModel": {
                "properties": {
                    "machine_id": {
                        "type": "string",
                        "title": "Machine Id",
                        "description": "Machine ID for this device",
                        "examples": [
                            "089a2ff00dd9476ffd7ff2aaabc34ed89"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "machine_id"
                ],
                "title": "MachineIDModel"
            },
            "NameModel": {
                "properties": {
                    "name": {
                        "type": "string",
                        "pattern": "^[-_()0-9a-zA-Z]+$",
                        "title": "Name",
                        "description": "Name Field ",
                        "examples": [
                            "string_name-123"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "NameModel"
            },
            "NameValue": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name"
                    },
                    "value": {
                        "type": "integer",
                        "title": "Value",
                        "description": "Value",
                        "examples": [
                            1000
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "value"
                ],
                "title": "NameValue"
            },
            "OtpUriModel": {
                "properties": {
                    "uri": {
                        "type": "string",
                        "title": "Uri",
                        "description": "OTP URI"
                    }
                },
                "type": "object",
                "required": [
                    "uri"
                ],
                "title": "OtpUriModel"
            },
            "RouteModel": {
                "properties": {
                    "ip_subnet": {
                        "$ref": "#/components/schemas/IpSubnetModel"
                    },
                    "gateway_ip": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IpModel"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "if_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "If Name",
                        "description": "Interface Name",
                        "examples": [
                            "eth0"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "ip_subnet",
                    "gateway_ip",
                    "if_name"
                ],
                "title": "RouteModel"
            },
            "SACertModel": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Identifier",
                        "examples": [
                            "CN=user.strongswan.org"
                        ]
                    },
                    "class_": {
                        "type": "string",
                        "title": "Class ",
                        "description": "Class Name for the SA",
                        "examples": [
                            "public key"
                        ]
                    },
                    "groups": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Groups",
                        "description": "Groups",
                        "default": [
                            ""
                        ]
                    },
                    "cert_policy": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Cert Policy",
                        "description": "Certificate Policy",
                        "default": [
                            ""
                        ]
                    },
                    "certs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Certs",
                        "description": "Certificates List",
                        "default": [
                            ""
                        ]
                    },
                    "cacerts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Cacerts",
                        "description": "CA Certificates List",
                        "default": [
                            ""
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "class_"
                ],
                "title": "SACertModel"
            },
            "SAModel": {
                "properties": {
                    "name": {
                        "type": "string",
                        "pattern": "^[-_()0-9a-zA-Z]+$",
                        "title": "Name",
                        "description": "Name Field ",
                        "examples": [
                            "string_name-123"
                        ]
                    },
                    "encr_alg": {
                        "type": "string",
                        "title": "Encr Alg",
                        "description": "Encryption Algorithm",
                        "default": "AES_GCM_16",
                        "examples": [
                            "AES_GCM_16"
                        ],
                        "key": "encr-alg"
                    },
                    "encr_keysize": {
                        "type": "integer",
                        "title": "Encr Keysize",
                        "description": "Encryption Key size in Bits",
                        "default": 256,
                        "examples": [
                            256
                        ],
                        "key": "encr-keysize"
                    },
                    "dh_group": {
                        "type": "string",
                        "title": "Dh Group",
                        "description": "DH Group Name",
                        "default": "MODP_4096",
                        "examples": [
                            "MODP_4096",
                            "ECP384"
                        ],
                        "key": "dh-group"
                    },
                    "version": {
                        "type": "integer",
                        "title": "Version",
                        "description": "IKEv1/2 Version integer",
                        "default": 2,
                        "examples": [
                            1,
                            2
                        ]
                    },
                    "local_host": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IPorDNSNameModel"
                            }
                        ],
                        "description": "Local IP Address",
                        "key": " local-host"
                    },
                    "local_port": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Local Port",
                        "description": "Local Port Number",
                        "default": 4500,
                        "examples": [
                            4500
                        ],
                        "key": " local-port"
                    },
                    "local_id": {
                        "type": "string",
                        "title": "Local Id",
                        "description": "Local Certificate ID",
                        "examples": [
                            "CN=user1.strongswan.org"
                        ],
                        "key": " local-id"
                    },
                    "local_cert_fingerprint": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Local Cert Fingerprint",
                        "description": "Local Certificate Fingerprint"
                    },
                    "remote_host": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IPorDNSNameModel"
                            }
                        ],
                        "description": "Remote IP Address",
                        "key": " remote-host"
                    },
                    "remote_port": {
                        "type": "integer",
                        "maximum": 65535.0,
                        "minimum": 0.0,
                        "title": "Remote Port",
                        "description": "Remote Port Number",
                        "default": 4500,
                        "examples": [
                            4500
                        ],
                        "key": " remote-port"
                    },
                    "remote_id": {
                        "type": "string",
                        "title": "Remote Id",
                        "description": "Remote Certificate ID",
                        "examples": [
                            "CN=user2.strongswan.org"
                        ],
                        "key": " remote-id"
                    },
                    "remote_cacerts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Remote Cacerts",
                        "description": "Remote CA Certificate IDs",
                        "default": [],
                        "examples": [
                            "CN=CA2.strongswan.org"
                        ],
                        "key": "cacert"
                    },
                    "prf_alg": {
                        "type": "string",
                        "title": "Prf Alg",
                        "description": "Pseudo Random Function",
                        "default": "PRF_HMAC_SHA2_384",
                        "examples": [
                            "PRF_HMAC_SHA2_384"
                        ],
                        "key": " prf-alg"
                    },
                    "rekey_time": {
                        "type": "integer",
                        "title": "Rekey Time",
                        "description": "Rekey Interval in seconds, Default=4 hours, Disabled=0",
                        "default": 14400,
                        "examples": [
                            6000
                        ],
                        "key": " rekey-time"
                    },
                    "reauth_time": {
                        "type": "integer",
                        "title": "Reauth Time",
                        "description": "IKE Reauthentication Interval in seconds, Default=0, Disabled=0",
                        "default": 0,
                        "examples": [
                            3600
                        ],
                        "key": " reauth-time"
                    },
                    "uniqueid": {
                        "type": "string",
                        "title": "Uniqueid",
                        "description": "Unique ID for this SA"
                    },
                    "state": {
                        "type": "string",
                        "title": "State",
                        "description": "State of this SA",
                        "examples": [
                            "ESTABLISHED"
                        ]
                    },
                    "initiator": {
                        "type": "string",
                        "title": "Initiator",
                        "description": "Indicates if this is the initiator",
                        "default": "no",
                        "examples": [
                            "yes"
                        ]
                    },
                    "initiator_spi": {
                        "type": "string",
                        "title": "Initiator Spi",
                        "description": "Initiator's SPI Value hex string",
                        "examples": [
                            "17c06cc2fc722e8a"
                        ],
                        "key": " initiator-spi"
                    },
                    "responder_spi": {
                        "type": "string",
                        "title": "Responder Spi",
                        "description": "Responder's SPI Value hex string",
                        "examples": [
                            "27c06cc2fc722e8a"
                        ],
                        "key": " responder-spi"
                    },
                    "established": {
                        "type": "integer",
                        "title": "Established",
                        "description": "Established time in seconds",
                        "default": 0,
                        "examples": [
                            60
                        ]
                    },
                    "tasks_active": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tasks Active",
                        "description": "Tasks Active"
                    },
                    "child_sas": {
                        "items": {
                            "$ref": "#/components/schemas/ChildSAModel"
                        },
                        "type": "array",
                        "title": "Child Sas",
                        "description": "Child SAs",
                        "key": " child-sas"
                    },
                    "nat_remote": {
                        "type": "string",
                        "title": "Nat Remote",
                        "description": "Network Address Translation Remote setting",
                        "default": "no",
                        "examples": [
                            "yes",
                            "no"
                        ],
                        "key": "nat-remote"
                    },
                    "nat_any": {
                        "type": "string",
                        "title": "Nat Any",
                        "description": "Network Address Translation Any setting",
                        "default": "no",
                        "examples": [
                            "yes",
                            "no"
                        ],
                        "key": "nat-any"
                    },
                    "tasks_passive": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tasks Passive",
                        "description": "Tasks Passive",
                        "default": [],
                        "examples": [
                            [
                                "IKE_INIT",
                                "IKE_CERT_PRE",
                                "IKE_AUTH"
                            ]
                        ],
                        "key": "tasks-passive"
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "name",
                    "local_host",
                    "local_id",
                    "remote_host",
                    "remote_id",
                    "uniqueid",
                    "state",
                    "initiator_spi",
                    "responder_spi",
                    "child_sas"
                ],
                "title": "SAModel"
            },
            "SSHPubKeyModel": {
                "properties": {
                    "data": {
                        "type": "string",
                        "title": "Data",
                        "description": "SSH Public Key Data"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "SSHPubKeyModel"
            },
            "SSHUserInfo": {
                "properties": {
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "public_key": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SSHPubKeyModel"
                            }
                        ],
                        "description": "SSH Public Key"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "public_key"
                ],
                "title": "SSHUserInfo"
            },
            "SSLVerifClientEnum": {
                "type": "string",
                "enum": [
                    "on",
                    "off"
                ],
                "title": "SSLVerifClientEnum"
            },
            "StatsStringModel": {
                "properties": {
                    "stats": {
                        "type": "string",
                        "title": "Stats",
                        "description": "Statistics string"
                    }
                },
                "type": "object",
                "required": [
                    "stats"
                ],
                "title": "StatsStringModel"
            },
            "StatusEnum": {
                "type": "string",
                "enum": [
                    "UP",
                    "DOWN",
                    "CONFIGURING",
                    "RESTARTING",
                    "UNKNOWN"
                ],
                "title": "StatusEnum"
            },
            "StatusModel": {
                "properties": {
                    "component": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ComponentEnum"
                            }
                        ],
                        "description": "Component Name"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatusEnum"
                            }
                        ],
                        "description": "Status"
                    }
                },
                "type": "object",
                "required": [
                    "component",
                    "status"
                ],
                "title": "StatusModel"
            },
            "SwVersionModel": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Software Application Name",
                        "examples": [
                            "sk_vpn"
                        ]
                    },
                    "version": {
                        "type": "string",
                        "title": "Version",
                        "description": "Version",
                        "examples": [
                            "1.0-12345678"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "version"
                ],
                "title": "SwVersionModel"
            },
            "SwupdateStatus": {
                "properties": {
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SwupdateStatusEnum"
                            }
                        ],
                        "description": "Software Update Status"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "SwupdateStatus"
            },
            "SwupdateStatusEnum": {
                "type": "string",
                "enum": [
                    "IDLE",
                    "IN_PROGRESS",
                    "FAILED_SERVER",
                    "FAILED_DOWNLOAD",
                    "FAILED_INSTALL",
                    "IMAGE_DOWNLOADING",
                    "IMAGE_DOWNLOAD_COMPLETE",
                    "INSTALLING",
                    "SUCCESS_NO_UPDATE",
                    "REBOOT_REQUIRED"
                ],
                "title": "SwupdateStatusEnum"
            },
            "SysSecuritySettings": {
                "properties": {
                    "otp_enforce": {
                        "type": "boolean",
                        "title": "Otp Enforce",
                        "description": "OTP Enforcement setting for all users. When set all users must provide OTP for login.",
                        "default": false
                    },
                    "token_timeout_sec": {
                        "type": "integer",
                        "title": "Token Timeout Sec",
                        "description": "Auth Token Timeout in seconds (default: 30 minutes)",
                        "default": 1800
                    },
                    "password_timeout_sec": {
                        "type": "integer",
                        "title": "Password Timeout Sec",
                        "description": "Password Timeout in seconds (default: 90 days)",
                        "default": 7776000
                    }
                },
                "type": "object",
                "title": "SysSecuritySettings"
            },
            "SysTimeModel": {
                "properties": {
                    "time": {
                        "type": "string",
                        "title": "Time",
                        "description": "System Time ISO formatted",
                        "examples": [
                            "2021-01-01T00:00:00+00:00"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "time"
                ],
                "title": "SysTimeModel"
            },
            "SyslogConfigModel": {
                "properties": {
                    "enable_remote_syslog": {
                        "type": "boolean",
                        "title": "Enable Remote Syslog",
                        "description": "True if remote syslog server is enabled",
                        "default": false
                    },
                    "server_address": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "ipv4"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Server Address",
                        "description": "Server IP address"
                    },
                    "server_port": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 65535.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Server Port",
                        "description": "Port",
                        "default": 514
                    },
                    "enable_authentication": {
                        "type": "boolean",
                        "title": "Enable Authentication",
                        "description": "True if authentication is enabled",
                        "default": false
                    }
                },
                "type": "object",
                "title": "SyslogConfigModel"
            },
            "SystemReportModel": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Software Component Name",
                        "examples": [
                            "Secure Boot",
                            "cpuinfo",
                            "meminfo"
                        ]
                    },
                    "data": {
                        "type": "string",
                        "title": "Data",
                        "description": "Report data",
                        "examples": [
                            "Enabled",
                            "Disabled",
                            "Not Available"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "data"
                ],
                "title": "SystemReportModel"
            },
            "SystemVersionModel": {
                "properties": {
                    "software": {
                        "items": {
                            "$ref": "#/components/schemas/SwVersionModel"
                        },
                        "type": "array",
                        "title": "Software",
                        "description": "Software Application Versions"
                    }
                },
                "type": "object",
                "required": [
                    "software"
                ],
                "title": "SystemVersionModel"
            },
            "TLSConfigModel": {
                "properties": {
                    "ssl_verify_client": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SSLVerifClientEnum"
                            }
                        ],
                        "description": "Verify Client Certificate (Mutual TLS Authentication)",
                        "default": "off",
                        "examples": [
                            "on",
                            "off"
                        ]
                    },
                    "ssl_verify_depth": {
                        "type": "integer",
                        "title": "Ssl Verify Depth",
                        "description": "Maximum Certificate Depth",
                        "default": 2,
                        "examples": [
                            1,
                            2
                        ]
                    }
                },
                "type": "object",
                "title": "TLSConfigModel"
            },
            "Token": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "token_type"
                ],
                "title": "Token"
            },
            "UserChangePassword": {
                "properties": {
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": ""
                    },
                    "client_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Id",
                        "description": "Oauth2 Client ID"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret",
                        "description": "Oauth2 Client Secret (when OTP is enabled this is the OTP)"
                    },
                    "new_password": {
                        "$ref": "#/components/schemas/UserPassword"
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "username",
                    "new_password"
                ],
                "title": "UserChangePassword"
            },
            "UserCreate": {
                "properties": {
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "is_admin": {
                        "type": "boolean",
                        "title": "Is Admin",
                        "default": false
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "is_otp_enabled": {
                        "type": "boolean",
                        "title": "Is Otp Enabled",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "password",
                    "username"
                ],
                "title": "UserCreate"
            },
            "UserInfo": {
                "properties": {
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "is_admin": {
                        "type": "boolean",
                        "title": "Is Admin",
                        "default": false
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "is_otp_enabled": {
                        "type": "boolean",
                        "title": "Is Otp Enabled",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "username"
                ],
                "title": "UserInfo"
            },
            "UserPassword": {
                "properties": {
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "password"
                ],
                "title": "UserPassword"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "x509ExtensionsModel": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Extension Name"
                    },
                    "critical": {
                        "type": "boolean",
                        "title": "Critical",
                        "description": "Extension Critical"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value",
                        "description": "Extension Value"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "critical",
                    "value"
                ],
                "title": "x509ExtensionsModel"
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearer": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {},
                        "tokenUrl": "/api/auth/v1/token"
                    }
                }
            }
        }
    }
}